<Window x:Class="CyberSniff.Windows.ArpWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:window="clr-namespace:CyberSniff.Windows"
        xmlns:converters="clr-namespace:CyberSniff.Converters"
        x:Name="Window"
        Title="CyberSniff - ARP Poisoning"
        Width="950"
        Height="600"
        AllowsTransparency="True"
        Background="#FF14141E"
        Closing="Window_Closing"
        FontFamily="pack://application:,,,/CyberSniff;Component/Resources/Fonts/#Gotham"
        Foreground="White"
        Loaded="Arp_Loaded"
        RenderTransformOrigin="0.5,0.5"
        ResizeMode="NoResize"
        ShowInTaskbar="False"
        WindowStartupLocation="CenterOwner"
        WindowStyle="None"
        mc:Ignorable="d">
    <Window.Resources>
        <converters:InverseBooleanConverter x:Key="InverseBooleanConverter" />
        <Storyboard x:Key="OpenAnim">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Window" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuinticEase EasingMode="EaseInOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuinticEase EasingMode="EaseInOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="TopBox" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="38.483">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuinticEase EasingMode="EaseInOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0.577">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuinticEase EasingMode="EaseInOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="StackPanel" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="38.483">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuinticEase EasingMode="EaseInOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0.577">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuinticEase EasingMode="EaseInOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScanBtn" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="38.483">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuinticEase EasingMode="EaseInOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0.577">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuinticEase EasingMode="EaseInOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PoisonBtn" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="38.483">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuinticEase EasingMode="EaseInOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0.577">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuinticEase EasingMode="EaseInOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FromDeviceList" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="38.483">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuinticEase EasingMode="EaseInOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0.577">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuinticEase EasingMode="EaseInOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ToDeviceList" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="38.483">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuinticEase EasingMode="EaseInOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0.577">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuinticEase EasingMode="EaseInOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <BeginStoryboard x:Key="CloseAnim">
            <Storyboard Completed="Storyboard_Completed">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Window" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <QuinticEase EasingMode="EaseInOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="TopBox" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                    <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="23">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <QuinticEase EasingMode="EaseInOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="StackPanel" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                    <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="23">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <QuinticEase EasingMode="EaseInOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScanBtn" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                    <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="23">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <QuinticEase EasingMode="EaseInOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PoisonBtn" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                    <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="23">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <QuinticEase EasingMode="EaseInOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FromDeviceList" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                    <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="23">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <QuinticEase EasingMode="EaseInOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ToDeviceList" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                    <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="23">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <QuinticEase EasingMode="EaseInOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </BeginStoryboard>
    </Window.Resources>
    <Window.RenderTransform>
        <TransformGroup>
            <ScaleTransform />
            <SkewTransform />
            <RotateTransform />
            <TranslateTransform />
        </TransformGroup>
    </Window.RenderTransform>
    <Window.Triggers>
        <EventTrigger RoutedEvent="Window.Loaded">
            <BeginStoryboard Storyboard="{StaticResource OpenAnim}" />
        </EventTrigger>
    </Window.Triggers>
    <Border Style="{StaticResource CyberSniffWindowBorder}">
        <Grid Name="MainGrid" RenderTransformOrigin="0.5,0.5">
            <Grid.RenderTransform>
                <TransformGroup>
                    <ScaleTransform />
                    <SkewTransform />
                    <RotateTransform />
                    <TranslateTransform />
                </TransformGroup>
            </Grid.RenderTransform>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Image Name="BackgroundImage"
                   Grid.RowSpan="2"
                   Grid.ColumnSpan="2"
                   Width="{Binding ElementName=Window, Path=ActualWidth}"
                   Height="{Binding ElementName=Window, Path=ActualHeight}"
                   Margin="1,0,0,0"
                   HorizontalAlignment="Left"
                   VerticalAlignment="Top"
                   Stretch="UniformToFill" />
            <Grid Grid.Row="0" Grid.Column="0" x:Name="TopBox"
                  Width="{Binding ElementName=MainGrid, Path=ActualWidth}"
                  Height="37"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Background="#7F0A0A14"
                  RenderTransformOrigin="0.5,0.5">
                <Grid.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform />
                        <SkewTransform />
                        <RotateTransform />
                        <TranslateTransform />
                    </TransformGroup>
                </Grid.RenderTransform>
                <Button x:Name="CloseButton"
                        Width="54"
                        Height="36"
                        Margin="300,0,0,0"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        Background="{x:Null}"
                        BorderBrush="{x:Null}"
                        Click="CloseButton_Click"
                        Cursor="Arrow"
                        Foreground="White"
                        RenderTransformOrigin="0.5,0.5"
                        ToolTip="Close this window">
                    <Button.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform />
                            <SkewTransform />
                            <RotateTransform />
                            <TranslateTransform />
                        </TransformGroup>
                    </Button.RenderTransform>
                    <materialDesign:PackIcon Kind="WindowClose" />
                </Button>
                <StackPanel HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Orientation="Horizontal">
                    <Image x:Name="IconBox"
                           Width="20"
                           Height="20"
                           Margin="0,0,7,0"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           RenderTransformOrigin="0.5,0.5"
                           Source="/Resources/Images/csniff-28.png"
                           WindowChrome.IsHitTestVisibleInChrome="True">
                        <Image.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform />
                                <SkewTransform />
                                <RotateTransform />
                                <TranslateTransform />
                            </TransformGroup>
                        </Image.RenderTransform>
                    </Image>
                    <TextBlock x:Name="TitleBox"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               RenderTransformOrigin="0.5,0.5"
                               Style="{StaticResource CyberSniffBoldText}"
                               Text="CyberSniff - ARP Poisoning">
                        <TextBlock.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform />
                                <SkewTransform />
                                <RotateTransform />
                                <TranslateTransform />
                            </TransformGroup>
                        </TextBlock.RenderTransform>
                    </TextBlock>
                </StackPanel>
            </Grid>
            <Grid
                Grid.Row="1" Grid.Column="0"
                Background="#4414141E">
                <Grid.RowDefinitions>
                    <RowDefinition Height="100" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid Grid.Row="0">
                    <StackPanel x:Name="StackPanel"
                                Margin="15,18,390,18"
                                Orientation="Horizontal"
                                RenderTransformOrigin="0.5,0.5">
                        <StackPanel.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform />
                                <SkewTransform />
                                <RotateTransform />
                                <TranslateTransform />
                            </TransformGroup>
                        </StackPanel.RenderTransform>
                        <TextBox x:Name="DeviceIpAddressTextBox"
                                 Width="250"
                                 Height="45"
                                 Margin="0,0,15,0"
                                 VerticalAlignment="Center"
                                 materialDesign:TextFieldAssist.HasClearButton="True"
                                 Foreground="White"
                                 IsEnabled="{Binding IsAdding, Converter={StaticResource InverseBooleanConverter}, ElementName=Window}"
                                 RenderTransformOrigin="0.5,0.5"
                                 Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                 ToolTip="Enter the local IP address of the device you want to add">
                            <materialDesign:HintAssist.Hint>
                                <StackPanel Orientation="Horizontal">
                                    <materialDesign:PackIcon Kind="Ip" />
                                    <TextBlock Text=" IP Address" />
                                </StackPanel>
                            </materialDesign:HintAssist.Hint>
                        </TextBox>
                        <Button x:Name="AddBtn"
                                Width="145"
                                Height="40"
                                Margin="0,0,0,0"
                                VerticalAlignment="Center"
                                materialDesign:ButtonProgressAssist.IsIndeterminate="True"
                                materialDesign:ButtonProgressAssist.IsIndicatorVisible="{Binding ElementName=Window, Path=IsAdding}"
                                materialDesign:ButtonProgressAssist.Value="0"
                                Command="{x:Static window:ArpWindow.AddCommand}"
                                Cursor="Arrow"
                                IsEnabled="{Binding IsAdding, Converter={StaticResource InverseBooleanConverter}, ElementName=Window}"
                                ToolTip="Add this device">
                            <StackPanel Orientation="Horizontal">
                                <materialDesign:PackIcon VerticalAlignment="Top" Kind="Add" />
                                <TextBlock Name="AddDeviceButtonText" Margin="5,0,0,0">ADD DEVICE</TextBlock>
                            </StackPanel>
                        </Button>
                        <StackPanel Height="50"
                                    Margin="10,0,0,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Orientation="Horizontal"
                                    ToolTip="When enabled, CyberSniff will not forward packets sent from the target device to the source device, meaning network connection on the target device will not work entirely whilst sniffing.">
                            <ToggleButton x:Name="NullRouteToggle"
                                          Margin="10,0,0,0"
                                          x:FieldModifier="public" />
                            <TextBlock Margin="10,0,0,0"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Center"
                                       Style="{StaticResource CyberSniffText}"
                                       Text="Null-route"
                                       TextAlignment="Center" />
                        </StackPanel>
                    </StackPanel>
                    <StackPanel HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                Orientation="Horizontal">
                        <Button x:Name="ScanBtn"
                                Width="145"
                                Height="40"
                                Margin="0,30,10,30"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                materialDesign:ButtonProgressAssist.IsIndeterminate="True"
                                materialDesign:ButtonProgressAssist.IsIndicatorVisible="{Binding ElementName=Window, Path=IsScanning}"
                                materialDesign:ButtonProgressAssist.Value="0"
                                Command="{x:Static window:ArpWindow.ScanCommand}"
                                Cursor="Arrow"
                                IsEnabled="{Binding IsScanning, Converter={StaticResource InverseBooleanConverter}, ElementName=Window}"
                                RenderTransformOrigin="0.5,0.5"
                                ToolTip="Scans the ARP routing table for devices on your network">
                            <Button.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform />
                                    <TranslateTransform />
                                </TransformGroup>
                            </Button.RenderTransform>
                            <StackPanel Orientation="Horizontal">
                                <materialDesign:PackIcon VerticalAlignment="Top" Kind="Search" />
                                <TextBlock Margin="5,0,0,0"><Run Name="ScanButtonText" Text="SCAN" /></TextBlock>
                            </StackPanel>
                        </Button>
                        <Button x:Name="PoisonBtn"
                                Width="194"
                                Height="40"
                                Margin="0,0,20,0"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                materialDesign:ButtonProgressAssist.IsIndeterminate="True"
                                materialDesign:ButtonProgressAssist.IsIndicatorVisible="{Binding ElementName=Window, Path=IsPoisoning}"
                                materialDesign:ButtonProgressAssist.Value="0"
                                Command="{x:Static window:ArpWindow.TogglePoisonCommand}"
                                Cursor="Arrow"
                                RenderTransformOrigin="0.5,0.5"
                                ToolTip="Enables ARP poisoning">
                            <Button.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform />
                                    <TranslateTransform />
                                </TransformGroup>
                            </Button.RenderTransform>
                            <StackPanel Orientation="Horizontal">
                                <materialDesign:PackIcon Name="PoisonButtonIcon"
                                                         VerticalAlignment="Top"
                                                         Kind="Play" />
                                <TextBlock Margin="5,0,0,0"><Run x:Name="PoisonButtonText" Text="START POISONING" /></TextBlock>
                            </StackPanel>
                        </Button>
                    </StackPanel>
                </Grid>
                <Grid Grid.Row="1"
                      Grid.ColumnSpan="1"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Stretch">
                    <DataGrid Name="FromDeviceList"
                              Margin="0,40,0,0"
                              AutoGenerateColumns="False"
                              Background="{x:Null}"
                              BeginningEdit="Grid_BeginningEdit"
                              CanUserAddRows="False"
                              CanUserDeleteRows="False"
                              CanUserReorderColumns="False"
                              CanUserResizeColumns="False"
                              CanUserResizeRows="False"
                              HorizontalGridLinesBrush="#7F757575"
                              IsSynchronizedWithCurrentItem="False"
                              MouseDoubleClick="DataGridView_MouseDoubleClick"
                              RenderTransformOrigin="0.5,0.5"
                              SelectionMode="Single"
                              SelectionUnit="FullRow"
                              VerticalGridLinesBrush="#00000000">
                        <DataGrid.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform />
                                <SkewTransform />
                                <RotateTransform />
                                <TranslateTransform />
                            </TransformGroup>
                        </DataGrid.RenderTransform>
                        <DataGrid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Click="HandleMenuItems">
                                    <MenuItem.Icon>
                                        <materialDesign:PackIcon Kind="ClipboardOutline" />
                                    </MenuItem.Icon>
                                    <MenuItem.Header>
                                        <TextBlock Text="Copy MAC address" />
                                    </MenuItem.Header>
                                </MenuItem>
                                <MenuItem Click="HandleMenuItems">
                                    <MenuItem.Icon>
                                        <materialDesign:PackIcon Kind="ClipboardOutline" />
                                    </MenuItem.Icon>
                                    <MenuItem.Header>
                                        <TextBlock Text="Copy IP address" />
                                    </MenuItem.Header>
                                </MenuItem>
                            </ContextMenu>
                        </DataGrid.ContextMenu>
                    </DataGrid>
                    <TextBlock Grid.Row="0"
                               Margin="10,10,0,20"
                               HorizontalAlignment="Left"
                               VerticalAlignment="Top"
                               Style="{StaticResource CyberSniffTiny}"
                               Text="Source device" />
                </Grid>
                <Grid Grid.Row="2"
                      Grid.ColumnSpan="2"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Stretch">
                    <TextBlock
                               Margin="10,10,0,20"
                               HorizontalAlignment="Left"
                               VerticalAlignment="Top"
                               Style="{StaticResource CyberSniffTiny}"
                               Text="Target device" />
                    <DataGrid Name="ToDeviceList"
                              Grid.ColumnSpan="2"
                              Margin="0,40,0,0"
                              HorizontalAlignment="Stretch"
                              VerticalAlignment="Stretch"
                              HorizontalContentAlignment="Center"
                              VerticalContentAlignment="Center"
                              AutoGenerateColumns="False"
                              Background="{x:Null}"
                              BeginningEdit="Grid_BeginningEdit"
                              CanUserAddRows="False"
                              CanUserDeleteRows="False"
                              CanUserReorderColumns="False"
                              CanUserResizeColumns="False"
                              CanUserResizeRows="False"
                              HorizontalGridLinesBrush="#7F757575"
                              IsSynchronizedWithCurrentItem="False"
                              MouseDoubleClick="DataGridView_MouseDoubleClick"
                              RenderTransformOrigin="0.5,0.5"
                              SelectionMode="Single"
                              SelectionUnit="FullRow"
                              VerticalGridLinesBrush="#00000000">
                        <DataGrid.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform />
                                <SkewTransform />
                                <RotateTransform />
                                <TranslateTransform />
                            </TransformGroup>
                        </DataGrid.RenderTransform>
                        <DataGrid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Name="CopyMac2" Click="HandleMenuItems">
                                    <MenuItem.Icon>
                                        <materialDesign:PackIcon Kind="ClipboardOutline" />
                                    </MenuItem.Icon>
                                    <MenuItem.Header>
                                        <TextBlock Text="Copy MAC address" />
                                    </MenuItem.Header>
                                </MenuItem>
                                <MenuItem Name="CopyAddress2" Click="HandleMenuItems">
                                    <MenuItem.Icon>
                                        <materialDesign:PackIcon Kind="ClipboardOutline" />
                                    </MenuItem.Icon>
                                    <MenuItem.Header>
                                        <TextBlock Text="Copy IP address" />
                                    </MenuItem.Header>
                                </MenuItem>
                            </ContextMenu>
                        </DataGrid.ContextMenu>
                    </DataGrid>
                </Grid>
            </Grid>
        </Grid>
    </Border>
</Window>